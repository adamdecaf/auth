language: go
dist: xenial
sudo: true
services:
  - docker
env:
  matrix:
  - GO111MODULE=on
matrix:
  include:
  - os: linux
    go: 1.12.x
    cache:
      directories:
      - "/home/travis/.cache/go-build"
  - os: osx
    go: 1.12.x
    cache:
      directories:
      - "/Users/travis/Library/Caches/go-build"
before_install:
  # Setup directory for binaries
  - mkdir ./bin
  - export PATH=$PATH:$PWD/bin
  # Misspell
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O misspell.tar.gz https://github.com/client9/misspell/releases/download/v0.3.4/misspell_0.3.4_linux_64bit.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O misspell.tar.gz https://github.com/client9/misspell/releases/download/v0.3.4/misspell_0.3.4_mac_64bit.tar.gz; fi
  - tar xf misspell.tar.gz && cp ./misspell ./bin/misspell
  # staticcheck
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O staticcheck.tar.gz https://github.com/dominikh/go-tools/releases/download/2019.2.2/staticcheck_linux_amd64.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O staticcheck.tar.gz https://github.com/dominikh/go-tools/releases/download/2019.2.2/staticcheck_darwin_amd64.tar.gz; fi
  - tar xf staticcheck.tar.gz && cp ./staticcheck/staticcheck ./bin/staticcheck
  # golint
  - go get -u golang.org/x/lint/golint
  # gocyclo
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O ./bin/gocyclo https://github.com/adamdecaf/gocyclo/releases/download/2019-08-09/gocyclo-linux-amd64; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O ./bin/gocyclo https://github.com/adamdecaf/gocyclo/releases/download/2019-08-09/gocyclo-darwin-amd64; fi
  - chmod +x ./bin/gocyclo
before_script:
  - GOFILES=$(find . -type f -name '*.go' | grep -v vendor)
  - go mod graph
script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then test -z $(gofmt -s -l $GOFILES); fi
  - go test ./... -race -coverprofile=coverage.txt -covermode=atomic
  - misspell -error -locale US $GOFILES
  - gocyclo -over 20 $GOFILES
  - golint -set_exit_status $GOFILES
  - staticcheck ./pkg/... .
after_success:
  - bash <(curl -s https://codecov.io/bash)
  - make docker
before_deploy:
  - make dist
deploy:
  provider: releases
  api_key:
    secure: ajeBCYmDRamEOv9hpix9ZsGFvKItW+g5XCM16r2mw1ERu51CcmQ3UjkTj/NRSbuc6vST3TZed95Glne6NnH3wtDtBZHlXpohFbFxHzotgFqnHAzANe+B6BWWJ6sYFqDTkvqN2b1AMN6S3SLpPBZGy07uAR6DoHWUXLT6H9goTgejxTU0Mf4X667m9qKdR+Gfo+7lew1Lf9OFjOcQXpZBFk9XKMnGtYq5kdG0p0pkAD1T+ODpj9AY3j3W9JcpwG+CvUU9MvX2Z+dpqoVOXj2KoomI+EU4yWSA2MRmPC1HJlxIYXQoANVZzE9nHfWZizuLhaiJFTln6QM2qK+aWO5xWug3ZNV1837UJyFKOQ4NJIfpBNzXi8tUolItnNJv5E3Dtvpq1ZxKPH176IzbrCbdYE718UOozwmsukP8ag61toTe0naPkiM80kqlWymmBi5XQuiG7j2b2fdnYT9/5996EPWAfC2ZcyrDkzxpLQOJmKn5m6a8lnqQGLheVRjeR0orpfJH6itlmm7i1X2t5vj9NsWF798uaxih0GT6um1TkijdEjGJi2OHhx0nXOaeeajSAjERlb46t2lSdvVMnPNMY+0k/gYAQGkRzVfihjEVkDq98rPq6kOqFCJpHnLoaPW5JxTu6QzcKyQHwL6fXbwSkGtX2190++y+AWBQLsyflHs=
  file_glob: true
  file:
    - bin/auth-*
  on:
    repo: moov-io/auth
    tags: true
    go: 1.12.x
  skip_cleanup: true
after_deploy:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - make release-push
